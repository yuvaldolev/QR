AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: qr

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - stage
      - prod

Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
  Api:
    TracingEnabled: true

Resources:
  QrApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}-ApiGatewayApi"
      StageName: !Ref Environment

  QrEncodeEntrySqs:
    Type: AWS::SQS::Queue

  QrEncodeEntryFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: rust-cargolambda
      BuildProperties:
        Binary: qr_encode_entry_function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-QrEncodeEntryFunction"
      CodeUri: ./
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - arm64
      Environment:
        Variables:
          SQS_URL: !Ref QrEncodeEntrySqs
          AWS_LAMBDA_LOG_LEVEL: trace
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt QrEncodeEntrySqs.QueueName
      Events:
        Encode:
          Type: Api 
          Properties:
            RestApiId: !Ref QrApi
            Path: /encode
            Method: post

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  QrEncodeApiUrl:
    Description: "API Gateway endpoint URL for QR encoding"
    Value: !Sub "https://${QrApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/encode"
